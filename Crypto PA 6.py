# Crypto PA 6
# Morgan Barksdale
# 11 Aug 2013

from gmpy2 import *
import gmpy2, sys, binascii

# Challenge 1
def c1():
	N = mpz(179769313486231590772930519078902473361797697894230657273430081157732675805505620686985379449212982959585501387537164015710139858647833778606925583497541085196591615128057575940752635007475935288710823649949940771895617054361149474865046711015101563940680527540071584560878577663743040086340742855278549092581)

	A = isqrt(N) + 1

	x = isqrt(square(A) - N)

	p = A + x
	q = A - x

	print 'p =', p
	print 'q =', q

# Challenge 2
def c2():
	N = mpz(648455842808071669662824265346772278726343720706976263060439070378797308618081116462714015276061417569195587321840254520655424906719892428844841839353281972988531310511738648965962582821502504990264452100885281673303711142296421027840289307657458645233683357077834689715838646088239640236866252211790085787877)
	sqrtN = isqrt(N) + 1
	A = sqrtN

	for i in range(2**20):

		x = isqrt(square(A) - N)
		
		p = A + x
		q = A - x
		
		if (p*q == N):
			print 'p =', p
			print 'q =', q
			break

		A += 1

# Challenge 3 (extra credit, incomplete)
def c3():
	N = mpz(720062263747350425279564435525583738338084451473999841826653057981916355690188337790423408664187663938485175264994017897083524079135686877441155132015188279331812309091996246361896836573643119174094961348524639707885238799396839230364676670221627018353299443241192173812729276147530748597302192751375739387929)
	A2 = (isqrt(6*N)*2)+1

	for i in range(2**20):

		x = isqrt(square(A2) - (24*N))
		
		p = (A2 - x)/3
		q = (A2 + x)/2
		
		if (N % p == 0):
			print 'p =', p1
		if (N % q == 0):
			print 'p =', p2

		A2 += 1

# Challenge 4
def c4():
	ct = 22096451867410381776306561134883418017410069787892831071731839143676135600120538004282329650473509424343946219751512256465839967942889460764542040581564748988013734864120452325229320176487916666402997509188729971690526083222067771600019329260870009579993724077458967773697817571267229951148662959627934791540
	N = mpz(179769313486231590772930519078902473361797697894230657273430081157732675805505620686985379449212982959585501387537164015710139858647833778606925583497541085196591615128057575940752635007475935288710823649949940771895617054361149474865046711015101563940680527540071584560878577663743040086340742855278549092581)

	A = isqrt(N) + 1
	x = isqrt(square(A) - N)

	p = A + x
	q = A - x

	phiN = N-p-q+1

	e = 65537
	d = ((5797*phiN)+1)/65537

	m = pow(ct,d,N)

	pkcs1v15_block = hex(m)
	pt = pkcs1v15_block[pkcs1v15_block.index('00')+2:]

	print binascii.unhexlify(pt)

c4()